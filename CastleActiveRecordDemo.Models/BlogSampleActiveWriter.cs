//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3620
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CastleActiveRecordDemo.Models {
    using System;
    using System.Collections.Generic;
    using System.Collections;
    using Castle.ActiveRecord;
    
    
    [ActiveRecord("Blog", Schema="dbo")]
    public partial class Blog : ActiveRecordBase<Blog> {
        
        private int _id;
        
        private string _name;
        
        private string _author;
        
        private IList<Post> _posts = new List<Post>();
        
        private User _createdBy;
        
        [PrimaryKey(PrimaryKeyType.Native, "Id", ColumnType="Int32")]
        public virtual int Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        [Property("Name", ColumnType="String", NotNull=true)]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        [Property("Author", ColumnType="String", NotNull=true)]
        public virtual string Author {
            get {
                return this._author;
            }
            set {
                this._author = value;
            }
        }
        
        [HasMany(typeof(Post), Cascade=ManyRelationCascadeEnum.All, ColumnKey="BlogId", Lazy=true, Table="Post")]
        public virtual IList<Post> Posts {
            get {
                return this._posts;
            }
            set {
                this._posts = value;
            }
        }
        
        [BelongsTo("CreatedBy", Cascade=CascadeEnum.All)]
        public virtual User CreatedBy {
            get {
                return this._createdBy;
            }
            set {
                this._createdBy = value;
            }
        }
        
        public partial class Properties {
            
            public static string Id = "Id";
            
            public static string Name = "Name";
            
            public static string Author = "Author";
        }
    }
    
    [ActiveRecord("Post", Schema="dbo")]
    public partial class Post : ActiveRecordBase<Post> {
        
        private int _id;
        
        private string _title;
        
        private string _contents;
        
        private string _category;
        
        private System.DateTime _createdDate;
        
        private Blog _blog;
        
        private User _createdBy;
        
        [PrimaryKey(PrimaryKeyType.Native, "Id", ColumnType="Int32")]
        public virtual int Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        [Property("Title", ColumnType="String", NotNull=true)]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        [Property("Contents", ColumnType="String", NotNull=true)]
        public virtual string Contents {
            get {
                return this._contents;
            }
            set {
                this._contents = value;
            }
        }
        
        [Property("Category", ColumnType="String")]
        public virtual string Category {
            get {
                return this._category;
            }
            set {
                this._category = value;
            }
        }
        
        [Property("CreatedDate", ColumnType="Timestamp", NotNull=true)]
        public virtual System.DateTime CreatedDate {
            get {
                return this._createdDate;
            }
            set {
                this._createdDate = value;
            }
        }
        
        [BelongsTo("BlogId", Cascade=CascadeEnum.All)]
        public virtual Blog Blog {
            get {
                return this._blog;
            }
            set {
                this._blog = value;
            }
        }
        
        [BelongsTo("CreatedBy", Cascade=CascadeEnum.All)]
        public virtual User CreatedBy {
            get {
                return this._createdBy;
            }
            set {
                this._createdBy = value;
            }
        }
        
        public partial class Properties {
            
            public static string Id = "Id";
            
            public static string Title = "Title";
            
            public static string Contents = "Contents";
            
            public static string Category = "Category";
            
            public static string CreatedDate = "CreatedDate";
        }
    }
    
    [ActiveRecord("`User`", Lazy=true, Schema="dbo")]
    public partial class User : ActiveRecordBase<User> {
        
        private int _id;
        
        private string _username;
        
        private string _password;
        
        private IList<Blog> _blogs = new List<Blog>();
        
        private IList<Post> _posts = new List<Post>();
        
        [PrimaryKey(PrimaryKeyType.Native, "Id", ColumnType="Int32")]
        public virtual int Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        [Property("Username", ColumnType="String", NotNull=true)]
        public virtual string Username {
            get {
                return this._username;
            }
            set {
                this._username = value;
            }
        }
        
        [Property("Password", ColumnType="String", NotNull=true)]
        public virtual string Password {
            get {
                return this._password;
            }
            set {
                this._password = value;
            }
        }
        
        [HasMany(typeof(Blog), Cascade=ManyRelationCascadeEnum.All, ColumnKey="CreatedBy", Lazy=true, Table="Blog")]
        public virtual IList<Blog> Blogs {
            get {
                return this._blogs;
            }
            set {
                this._blogs = value;
            }
        }
        
        [HasMany(typeof(Post), Cascade=ManyRelationCascadeEnum.All, ColumnKey="CreatedBy", Lazy=true, Table="Post")]
        public virtual IList<Post> Posts {
            get {
                return this._posts;
            }
            set {
                this._posts = value;
            }
        }
        
        public partial class Properties {
            
            public static string Id = "Id";
            
            public static string Username = "Username";
            
            public static string Password = "Password";
        }
    }
}
